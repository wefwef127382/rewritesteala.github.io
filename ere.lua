--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi)local bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw=100,37,22,24,19,72,74,24,83,74,84,21,31,82,41,25,37,77,96,97,12,23,16,65,33,96,97,44,16,87,38,97,96,46,60,85,26,26,39,70,12,95,12,77,88,98,92,91,72,51,12 while bi~=67 do if bj<=797 then if bj<=415 then if bj<=202 then if bj>=115 then if bj<=115 then ca=string.char bj=162 else if bj>166 then ch=string.gsub bj=240 else bj=202 cp=string.sub end end else if bj<65 then bj=67 bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw=nil else do cg=string.byte end bj=115 end end else if bj>=323 then if bj<=323 then bj=370 bx=math.ldexp else if bj<406 then bj=415 bu=(getfenv or function()return _ENV end)else bj=439 bn=setmetatable end end else if bj<=240 then cc=string.rep bj=275 else if bj<282 then bj=290 bo=table.concat else bj=323 co=table.insert end end end end else if bj>=612 then if bj<=697 then if bj>=650 then if bj>652 then bj=724 cr={}else bj=697 cw=tonumber end else bk=(unpack or table.unpack)bj=650 end else if bj<=724 then bj=754 for bi=0,255 do cr[bi]=ca(bi);end else if bj>756 then do bz={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,q,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,h,15,14,13,12,},{4,5,m,7,0,1,2,3,12,13,14,15,8,9,d,11,},{5,4,7,6,1,0,3,2,13,12,u,14,9,8,11,10,},{6,w,4,5,2,3,0,1,14,15,12,13,10,11,8,bb,},{7,6,5,c,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,be,11,12,13,y,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,b,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,l,},nil,nil}end bj=829 else cj=chfunction(b,c)return cr[cw(b,16)]end)bj=797 end end end else if bj>=522 then if bj<=522 then bj=565 cf=(function(b,c)if v==bt(b)then return true else return false end end)else if bj<575 then bm=math.abs bj=581 else do ci=math.floor end bj=612 end end else if bj<468 then cq=select bj=476 else bt=type bj=522 end end end end else if bj>=1162 then if bj>=1349 then if bj>=1466 then if bj>=1512 then if bj>1519 then break else bj=1529 return cd(bw(bu()),{},bu())();end else bj=1512 cd=function(b,c,d,h,h)local h,l,m,q,u m=b[78]do q=b[145]end l=b[82]u=b[63]h=ce do return function(...)local b,h,v,w,y,bb,be,bi,bm do bb=1 end be=-1 h=-1 do w={}end do v={...}end y=(cq('#',...)-1)bi={}bm={}for h=0,y do if(not(h<m))then do w[(h-m)]=v[(h+1)];end else bm[h]=v[(h+1)];end;end;b=(y-m+1)do while true do local b,h,m,v,w,y,bo,bt,bu,bx b=u[bb]y=b[165]bx=b[183]v=b[27]w=b[176]do bt=b[43]end h=b[46]m=b[196]bu=b[173]bo=b[86]if not(y<33)then if not(y<49)then if not(b[165]<57)then if not(b[165]<61)then if not(b[165]<63)then if not(y>63)then bm[v]=(bm[bu]-bm[bt]);else if(y<65)then local m do m=v end bm[m](bk(bm,(m+1),bu))else u[bb]={[27]=22,[46]=0,[165]=b[165]-63,[173]=3,[43]=0};bb=(bb-1);end end else if k==y then bm[v]=(bm[bu]/l[bt]);else local k,m,bx m=v k=bm[m]do bx=bm[(m+t)]end if((bx>0))then if((k>bm[m+1]))then bb=bu;else bm[(m+3)]=k;end elseif((k<bm[m+1]))then bb=bu;else bm[(m+3)]=k;end end end else if not(b[165]>58)then if(y<58)then c[bu]=bm[v];else u[bb]={[46]=0,[p]=1,[165]=y-17,[27]=0,[173]=2};bb=(bb-1);end else if 59==b[165]then do return bm[v]end else do bm[v]=c[bu];end end end end else do if not(y>52)then if not(y<51)then if not(y~=51)then u[bb]={[i]=0,[46]=0,[165]=y-21,[173]=1,[43]=1};bb=(bb-1);else u[bb]={[165]=y-26,[46]=0,[27]=28,[43]=26,[173]=70};do bb=(bb-1);end end else if(y>49)then bm[v]=cd(q[b[173]],nil,d);else local i,k,m m=v k={bm[m](bk(bm,m+1,be))}i=0 for p=m,bt do i=(i+1);bm[p]=k[i];end end end else if not(y<55)then do if(y<56)then do bm[v][l[bu]]=bm[bt];end else bm[v]=bm[b[173]][bm[bt]];end end else if(y>53)then u[bb]={[173]=2,[46]=0,[165]=y-22,[27]=2,[43]=2};bb=(bb-1);else local i do i=v end bm[i]=bm[i](bm[i+1]);end end end end end else if not(b[165]<41)then do if not(b[165]<45)then do if not(b[165]<47)then do if(y<48)then bm[v]=(bm[bu]%l[bt]);else if((l[v]<bm[bt]))then bb=bu;end;end end else do if not(y~=45)then local i,k,m k=v i=bm[(k+2)]m=(bm[k]+i)bm[k]=m;if((i>0))then if(not(m>bm[k+1]))then bb=bu;do bm[(k+3)]=m;end end elseif(not(m<bm[k+1]))then bb=b[173];do bm[(k+bc)]=m;end end elseif(bm[bt]~=bm[v])then bb=bu;end end end end else do if not(y>42)then if(y<42)then bm[v][bm[b[173]]]=bm[bt];else do if not bm[v]then bb=bu;end;end end else if not(y~=43)then local i,k do i=v end k=bm[bu]bm[(i+1)]=k;bm[i]=k[l[bt]];else bb=((bm[b[27]]==bm[bt])and bu or bb)end end end end end else if not(y<37)then if not(y>38)then do if(y>37)then local i i=v do bm[i](bm[(i+j)])end else bm[v]=(0~=bu);end end else do if 39==b[165]then local i,j j=bu do i=bm[j]end for k=(j+1),b[43]do i=(i..bm[k]);end;bm[v]=i;else local i i=v bm[i]=bm[i](bk(bm,i+1,be));end end end else if not(y>34)then do if 33==y then local i,j,k,m k=v i,m=cb(bm[k](bk(bm,(k+1),bu)))do be=(m+k-1)end do j=0 end do for m=k,be do do j=(j+1);end bm[m]=i[j];end;end else local i,j,k,m,p k=v j=bt p=(k+2)m={bm[k](bm[k+1],bm[p])}for t=1,j do bm[(p+t)]=m[t]end i=bm[(k+3)]if i then do bm[p]=i end else bb=b[173];end;end end else if(y>35)then while(bm[b[27]]<bm[bt])do bb=bu;break end else local i i={}if(#bi>0)then do for j=1,#bi do local k k=bi[j]for j=0,#k do local m,p,t m=k[j]p=m[1]t=m[2]while(p==bm and t>=0)do i[t]=p[t]m[1]=i break end end end end end return true;end end end end end else if not(y>n)then if not(y>7)then do if not(y>3)then do if not(y>1)then if(y<1)then u[bb]={[173]=0,[165]=b[165]- -20,[43]=2,[27]=28,[46]=0};bb=(bb-1);else do if(not(bm[v]==l[bt]))then bb=bu;end;end end else if(y<3)then bm[v]=d[l[bu]];else bm[b[27]]=bm[bu];end end end else if not(y<6)then do if(y>6)then bm[b[27]]=(bm[bu]+l[bt]);else bb=((bm[v]<bm[bt])and bu or bb)end end else do if(y<5)then if(bm[bt]==bm[b[27]])then do bb=bu;end end;else u[bb]=ck[h];bb=bu;end end end end end else if not(b[165]>11)then if not(y>9)then if(b[165]<9)then do u[bb]={[bf]=0,[46]=0,[43]=1,[165]=y- -24,[27]=0};end bb=(bb-1);else bm[v]=#bm[bu];end else if(y<11)then l=ce[v](l)else bm[b[e]]=(bm[bu]+bm[bt]);end end else do if not(y<14)then if(y<15)then local e e=v bm[e]=bm[e](bk(bm,e+1,b[bg]));else if bm[v]then bb=bu;end;end else if 12==b[bh]then local e,h,i do e=q[b[173]]end i=nil h={}i=bn({},{__index=function(j,j)local j=h[j];return j[1][j[2]];end,__newindex=function(j,j,k)local j=h[j]j[1][j[2]]=k;end;});for j=1,bt do local k do k=b[180][j]end do if k[1]then h[(j-1)]={bm,k[2],nil,nil};else do h[(j-1)]={c,k[2],nil};end end;end bi[(#bi+1)]=h;end;bm[v]=cd(e,i,d);else bm[v]=(bm[bu]*bm[b[43]]);end end end end end else if not(y>23)then if not(y>19)then if not(y>17)then if 16==b[165]then local c,e do e=v end c={}if(#bi>0)then for h=1,#bi do local i i=bi[h]for h=0,#i do local j,k,m k=i[h]j=k[1]m=k[2]if(j==bm and m>=0)then c[m]=j[m]k[1]=c end end end end return bk(bm,e,be);else local c c=v bm[c]=bm[c]();end else do if(y>18)then bb=bu;else local c,e,h,i i=v do e,c=cb(bm[i](bm[(i+1)]))end do be=(c+i-1)end h=0 do for c=i,be do do h=(h+1);end bm[c]=e[h];end;end end end end else if not(y>21)then if not(y~=20)then bm[v]={};else bm[v]=l[bu]end else if(b[165]<23)then do u[bb]={[165]=y-8,[27]=8,[173]=10,[43]=2,[46]=0};end bb=(bb-1);else u[bb]={[173]=9,[43]=82,[27]=7,[46]=0,[165]=y-2};bb=(bb-1);end end end else do if not(y>27)then if not(y>25)then if 24==y then do bb=((bm[v]~=bm[bt])and b[173]or bb)end else do bm[bo]=(function()bm[v]=cd(q[w],nil,d);end)end end else if(y<27)then bm[v][l[bu]]=l[b[43]];else bm[v]=nil;end end else if not(y<30)then do if not(y<31)then do if(y<32)then local c,d,e c=v e=bm[c]do d=b[173]end for b=1,d do e[b]=bm[(c+b)]end;else do bm[v]=bm[bu][l[bt]];end end end else bm[v]();end end else do if(y<29)then bb=((l[v]<bm[bt])and bu or bb)else bm[v]=(bm[bu]*l[bt]);end end end end end end end end do bb=(bb+1);end end;end end;end end end else if bj<=1349 then bw=function(b,c,c,c)local c,d,e,h,i,j,k,l=82,54,17,53,23,83,76,23,50,58,18,72,56,38,23,70,80,18,14,79,12,31,99,10,74 while c~=54 do if d<=322 then if d>=227 then if d>=304 then if d>309 then k={}d=368 else l=cn()d=322 end else if d<268 then h=cn()d=270 else d=304 do for c=(#ck+1),(#ck+h)do local m,n,p,q,t=97,65,18,58,27,99,31,36,25,62,16,55,36,90,25,75,58,30,88,66,25,52,31,96,12 while m~=51 do if n<=294 then if n>=194 then if n>=274 then if n<287 then do p[42]=cu(t,1,2);end n=294 else do p[165]=cu(q,1,11);end n=318 end else if n>199 then n=274 p[46]=cl();else do q=cn()end n=235 end end else if n<=87 then if n>74 then n=113 p={}else n=87 p,q,t=nil end else if n>118 then t=cn()n=194 else n=160 p[183]=cl();end end end else if n<=392 then if n<=353 then if n>326 then p[176]=cu(t,12,20);n=373 else n=353 p[g]=cu(t,3,11);end else if n>382 then n=431 p[173]=cu(q,12,33);else n=392 do p[43]=cu(t,21,29);end end end else if n>=474 then if n<509 then n=515 do ck[c]=p;end else break end else if n>434 then p[86]=-p[43]n=474 else n=453 p[196]=-p[27]end end end end end end end end end else if d<=91 then if d<83 then d=91 e,h,i,j,k,l=nil else d=132 j={}end else if d>135 then e={}d=227 else d=179 do i={}end end end end else if d<=459 then if d>=415 then if d>422 then e[a]=j;d=481 else for a=1,cn()do local c,g,h,m,n,p=78,58,45,19,11,95,41,78,96,83,41,90,33,38,33,43,54,31,49,99,93,47,95,83,72 while c~=45 do if g<=320 then if g<=142 then if g>=112 then if g>114 then do h[180]={};end g=182 else g=142 h[183]=cl();end else if g>63 then do h={{},nil,nil}end g=112 else h,m,n,p=nil g=83 end end else if g>=261 then if g>=293 then if g<316 then do n=cu(p,1,2)end g=320 else g=362 h[42]=n end else m=cn()g=293 end else if g>189 then g=261 p=cn()else g=218 if not(cl()~=1)then do for n=1,cl()do h[180][n]={cl()==0,cn()}end end end end end end else if g<=429 then if g<=388 then if g<380 then h[165]=cu(m,1,11);g=388 else g=409 h[27]=cu(p,3,11);end else if g<425 then h[173]=cu(m,12,33);g=429 else h[43]=cu(p,21,29);g=466 end end else if g>=519 then if g>=543 then if g<584 then g=587 do j[a]=h;end else c=45;end else g=543 h[86]=-h[43]end else if g>472 then do h[196]=-h[27]end g=519 else h[46]=cu(p,12,20);g=494 end end end end end end d=459 end else if d>377 then d=415 e[82]=k else for a=1,l do local c,g,h,j=75,63,65,14,67,22,27,55,70,27,22,12,41,72 while c~=26 do if g<=139 then if g<=63 then g=98 h,j=nil else if g>103 then h=nil g=175 else j=cl()g=139 end end else if g>=190 then if g>193 then c=26;else g=216 k[a]=h;end else if(not(j~=3))then h=(not(cl()==s));elseif(ba==j)then h=by();elseif(1==j)then h=bv();elseif(not(j~=0))then h=b[bv()];end;g=190 end end end end d=389 end end else if d<=516 then if d<507 then for a=1,cn()do i[a-1]=bw();end d=516 else e[145]=i;d=547 end else if d<=547 then d=588 do e[78]=cl();end else if d<615 then d=618 return e;else break end end end end end end end bj=1388 else if bj>1393 then bj=1466 do bl={}end else bj=1422 ce={}end end end else if bj<=1205 then if bj<1198 then bj=1205 cs=function()local a,b do a,b=cg(cj,bs,(bs+2))end bs=(bs+2);do return((b*256)+a);end end else by=function()local a,b,c,d,e,g,h,i=85,56,56,41,46,56,45,96,21,70,86,14,57,38,27,79,93,79 while a~=40 do if b<=140 then if b>=100 then if b<=100 then h=cn()b=123 else if b<134 then if((c==0 and h==0))then do return 0 end end b=140 else g=((-1)^ct(31,h,1))b=169 end end else if b>58 then c=cn()b=100 else c,d,e,g,h,i=nil b=83 end end else if b>=292 then if b<=292 then if not(e~=r)then if not(d==bd)then do e=1 end i=0 else return(g*0)end elseif 2047~=e then else if 0==d then do return(g*(0/0))end else do return(g*(1/0))end end end b=334 else if b<365 then b=372 return(g*(2^(e-1023))*(d/bq+i))else a=40;end end else if b>=215 then if b<238 then d=(ct(0,h,20)*4294967296+c)b=245 else do i=1 end b=292 end else e=ct(20,h,11)b=215 end end end end end bj=1253 end else if bj>=1298 then if bj<1314 then bj=1323 cb=function(...)return{...},cq('#',...)end else do ck={}end bj=1349 end else bv=function(a,a,a)local a,b,c,d=69,43,91,29,44,32,21,62,84,71,52,69,97,30 while a~=42 do if b<=97 then if b>=66 then if b<92 then do d=cn()end b=97 else do c=cj:sub(bs,(bs+d-1))end b=114 end else b=66 c,d=nil end else if b<=114 then do bs=(bs+d);end b=130 else if b>132 then a=42;else b=149 do return c;end end end end end end bj=1298 end end end else if bj<=943 then if bj<=877 then if bj>836 then bq=(2^52)bj=902 else bj=877 cv=f end else if bj<=902 then bj=922 bp={[0]=1}else if bj<937 then cm=2 bj=943 else for a=1,o do bp[a]=cm cm=(cm*2)end bj=969 end end end else if bj<=1023 then if bj>=1006 then if bj>1010 then bj=1069 do cu=function(a,b,c,d,d,d,d)local d d=((a/2^(b-1))%2^((c-1)-(b-1)+1))return(d-d%1);end end else bj=1023 do br=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+bz[e+1][f+1]*d a=(a-e)/x b=(b-f)/16 d=d*z end c=c+a*d+b*d return c end)end end else bj=1006 ct=function(a,b,c,d,d,d,d)local d,e,f=72,32,20,76,58,91,25,26,55,39,10,31,82,54 while d~=38 do if e>=139 then if e<=139 then do f=(f-f%1)end e=180 else if e>189 then break else e=224 return f end end else if e<=32 then f=nil e=66 else if e>73 then f=((b/bp[a])%bp[c])e=139 else e=103 f=nil end end end end end end else if bj>=1088 then if bj<1118 then bj=1127 cn=function()local a,b,c,d d,b,c,a=cg(cj,bs,(bs+3))bs=(bs+4);return((a*16777216)+(c*65536)+(b*256)+d);end else cl=function()local a do a=cg(cj,bs,bs)end bs=(bs+1);return a;end bj=1162 end else bj=1088 bs=1 end end end end end end end)(63,2,4,10,27,'',27,8,27,1,61,0,6,15,31,43,11,0,0,2,15,'number',7,16,14,16,2,9,3,0,10,173,173,165)
